"use strict";angular.module("angularPoint").directive("apInputGroup",["_","apCacheService","$filter",function(a,b,c){return{scope:{choices:"=?",cols:"=?",description:"=?",disabled:"=?",displayDescription:"=?",entity:"=?",fieldDefinition:"=?",fieldName:"=?",groupClass:"=?",label:"=?",lookupField:"=?",max:"=?",maxlength:"=?",min:"=?",minlength:"=?",placeholder:"=?",required:"=?",rows:"=?",validation:"=?",validationMessage:"=?"},restrict:"A",transclude:!0,templateUrl:"src/apInputGroup.html",link:function(d){function e(){var b=o.groupClass||f();o.inputGroupClass=a.isFunction(b)?b():b}function f(){var a=o.cols||m;return"col-sm-"+a}function g(c){if(!o.lookupOptions){var d=o.List;d&&(o.lookupOptions=b.getCachedEntities(d),a.isFunction(o.lookupFilter)&&(o.lookupOptions=o.lookupFilter(c,lookupOptions)))}o.lookupArray=a.isArray(o.lookupOptions)?o.lookupOptions:a.toArray(o.lookupOptions)}function h(a,b){if(!a||!b)throw new Error("An entity and fieldName are both required on the directive ifa fieldDefinition isn't specified.");return a.getFieldDefinition(b)}function i(b){if(o.validation&&a.isFunction(o.validation)){var c=b||"";return o.validation(c,o)}return!0}function j(b){return b?a.isDate(b):!0}var k=d.fieldDefinition||h(d.entity,d.fieldName);if(!a.isObject(k))throw new Error("apInputGroup requires a valid field definition object",d);var l=[e],m=3,n={choices:k.Choices,columns:m,contentUrl:"",description:k.Description,displayDescription:!1,disabled:!1,inputGroupClass:"col-sm-3",label:k.DisplayName,lookupField:k.ShowField?c("inflector")(k.ShowField,"variable"):"title",max:k.Max,maxlength:void 0,min:k.Min,minlength:void 0,placeholder:null,required:k.Required||!1,rows:k.NumLines||6,validationMessage:""};switch(k.objectType){case"Boolean":n.contentUrl="src/apInputControl.Boolean.html";break;case"Choice":n.contentUrl="src/apInputControl.Choice.html";break;case"DateTime":n.contentUrl="src/apInputControl.Date.html",n.validation=n.validation||j,n.validationMessage="Please enter a valid date.";break;case"HTML":n.contentUrl="src/apInputControl.HTML.html",m=12;break;case"Currency":case"Float":case"Integer":case"Number":n.contentUrl="src/apInputControl.Number.html",n.validationMessage="Not a valid number!";break;case"Lookup":l.push(function(){g(o.entity)}),n.contentUrl="src/apInputControl.Lookup.html";break;case"LookupMulti":l.push(function(){o.entity[o.fieldName]=o.entity[o.fieldName]||[],g(o.entity)}),n.contentUrl="src/apInputControl.LookupMulti.html";break;case"MultiChoice":n.contentUrl="src/apInputControl.MultiChoice.html";break;case"Note":m=12,n.contentUrl="src/apInputControl.Note.html";break;default:n.contentUrl="src/apInputControl.Text.html"}var o=a.extend({},n,k,d);if(d.$watch("fieldDefinition",function(b,c){b&&b!==c&&a.extend(o,b)},!0),!a.isString(o.fieldName))throw new Error("Field name is either undefined or not a string.  Ensure you place apostrophe's inside the quotes when identifying data-field-name.");d.options=o,d.validate=i,a.isFunction(o.groupClass)&&d.$watch("entity."+o.fieldName,function(){e()}),!o.entity[o.fieldName]&&o.Default&&(o.entity[o.fieldName]=o.Default),a.each(l,function(a){a()})}}}]),angular.module("angularPoint").directive("apInputRow",["_",function(a){return{scope:{entity:"=",fields:"=",containerClass:"=",ngDisabled:"="},restrict:"A",transclude:!0,templateUrl:"src/apInputRow.html",link:function(b){b.fieldNameArray=a.isArray(b.fields)?b.fields:[b.fields],b.state={containerClass:b.containerClass||"row"}}}}]),angular.module("angularPoint").run(["$templateCache",function(a){a.put("src/apInputControl.Boolean.html",'<button class="btn btn-link" ng-click="options.entity[options.fieldName] = !options.entity[options.fieldName]" ng-disabled=options.disabled><i class="fa fa-2x {{ options.entity[options.fieldName] ? \'fa-check-square-o\' : \'fa-square-o\' }}"></i></button>  <input type=checkbox class=hidden ng-model=options.entity[options.fieldName] ui-validate="\'validate($value)\'">'),a.put("src/apInputControl.Choice.html",'<select class=form-control ng-required=options.required ui-validate="\'validate($value)\'" placeholder="{{ options.placeholder }}" ng-disabled=options.disabled ng-model=options.entity[options.fieldName] ui-validate="\'validate($value)\'" ng-options="choice for choice in options.choices"></select>'),a.put("src/apInputControl.Date.html",'<input ui-date class=form-control ui-validate="\'validate($value)\'" ng-required=options.required ng-disabled=options.disabled placeholder="{{ options.placeholder }}" ng-model=options.entity[options.fieldName]>'),a.put("src/apInputControl.HTML.html",'<div text-angular ng-required=options.required ui-validate="\'validate($value)\'" name="{{ options.fieldName }}" ta-disabled=options.disabled placeholder={{options.placeholder}} ng-model=options.entity[options.fieldName]></div>'),a.put("src/apInputControl.Lookup.html","<div ui-select ng-model=options.entity[options.fieldName] ng-required=options.required ng-disabled=options.disabled><div ui-select-match placeholder=\"{{ options.placeholder }}\">{{ $select.selected[options.lookupField] }}</div><div ui-select-choices data-repeat=\"{'lookupId': lookup.id, 'lookupValue': lookup[options.lookupField]} as\nlookup in options.lookupArray track by lookup.id \">{{ lookup[options.lookupField] }}</div></div>"),a.put("src/apInputControl.LookupMulti.html","<div ui-select multiple ng-model=options.entity[options.fieldName] ui-validate=\"'validate($value)'\" ng-required=options.required ng-disabled=options.disabled><div ui-select-match placeholder=\"{{ options.placeholder }}\">{{ $item[options.lookupField] }}</div><div ui-select-choices data-repeat=\"{'lookupId': lookup.id, 'lookupValue': lookup[options.lookupField]} as\n    lookup in options.lookupArray track by lookup.id \">{{ lookup[options.lookupField] }}</div></div>"),a.put("src/apInputControl.MultiChoice.html",'<div ui-select multiple ng-required=options.required ui-validate="\'validate($value)\'" ng-disabled=options.disabled ng-model=options.entity[options.fieldName] class=form-control><div ui-select-match placeholder="{{ options.placeholder }}">{{ $item }}</div><div ui-select-choices data-repeat="choice in options.choices">{{ choice }}</div></div>'),a.put("src/apInputControl.Note.html","<textarea ng-model=options.entity[options.fieldName] ui-validate=\"'validate($value)'\" class=form-control rows={{options.rows}} ng-required=options.required ng-disabled=options.disabled placeholder={{options.placeholder}}>\n</textarea>"),a.put("src/apInputControl.Number.html","<input type=number class=form-control ui-validate=\"'validate($value)'\" ng-model=options.entity[options.fieldName] ng-required=options.required ng-disabled=options.disabled min={{options.min}} max={{options.max}} placeholder={{options.placeholder}}>"),a.put("src/apInputControl.Text.html",'<input class=form-control ui-validate="\'validate($value)\'" ng-model=options.entity[options.fieldName] ng-required=options.required ng-disabled=options.disabled ng-minlength="{{ options.minlength }}" ng-maxlength="{{ options.maxlength }}" placeholder={{options.placeholder}}>'),a.put("src/apInputGroup.html","<div class={{options.inputGroupClass}} ng-form=apInput><div class=form-group title={{options.description}} ng-class=\"{'has-error': apInput.$invalid}\"><label class=control-label>{{ options.label }} {{options.required ? '*' : ''}}</label><div ng-include=options.contentUrl ng-disabled=ngDisabled></div><span class=help-text ng-if=options.displayDescription>{{ options.description }}</span> <span class=text-danger ng-if=apInput.$invalid>{{ options.validationMessage }}</span></div></div>"),a.put("src/apInputRow.html",'<div class="{{ options.containerClass }}"><div ng-repeat="fieldName in fieldNameArray" ap-input-group data-entity=entity data-field-name=fieldName></div></div>')}]);