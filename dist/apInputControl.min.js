!function(){"use strict";angular.module("angularPoint").constant("apInputConstants",{defaultNumberOfColumns:3,defaultNumberOfRows:6,defaultTextAreaColumns:12,defaultViewportSize:"sm"})}(),angular.module("angularPoint").directive("apInputGroup",["_","apCacheService","$filter","apInputConstants",function(a,b,c,d){return{scope:{choices:"=?",cols:"=?",description:"=?",disabled:"=?",displayDescription:"=?",entity:"=?",fieldDefinition:"=?",fieldName:"=?",groupClass:"=?",inputClass:"=?",inputGroup:"=?",label:"=?",lookupField:"=?",max:"=?",maxlength:"=?",min:"=?",minlength:"=?",placeholder:"=?",required:"=?",rows:"=?",validation:"=?",validationMessage:"=?",viewport:"=?"},restrict:"A",transclude:!0,templateUrl:"src/apInputContainer.html",link:function(e){function f(){return q.inputGroup?"src/apInputGroup.html":q.contentUrl}function g(){var b=q.groupClass||h();q.inputGroupClass=a.isFunction(b)?b(q.entity[q.fieldName],q.entity,q.fieldName):b}function h(){var a=q.cols||d.defaultNumberOfColumns;return"col-"+q.viewport+"-"+a}function i(c){if(!q.lookupOptions){var d=q.List;d&&(q.lookupOptions=b.getCachedEntities(d),a.isFunction(q.lookupFilter)&&(q.lookupOptions=q.lookupFilter(c,lookupOptions)))}j()}function j(){q.lookupArray=[],a.each(q.lookupOptions,function(a){q.lookupArray.push({lookupValue:a[q.lookupField],lookupId:a.id})})}function k(a,b){if(!a||!b)throw new Error("An entity and fieldName are both required on the directive ifa fieldDefinition isn't specified.");return a.getFieldDefinition(b)}function l(b){if(q.validation&&a.isFunction(q.validation)){var c=b||"";return q.validation(c,q)}return!0}function m(b){return b?a.isDate(b):!0}var n=e.fieldDefinition||k(e.entity,e.fieldName);if(!a.isObject(n))throw new Error("apInputGroup requires a valid field definition object",e);var o=[g],p={choices:n.Choices,columns:d.defaultNumberOfColumns,contentUrl:"",description:n.Description,displayDescription:!1,disabled:!1,inputClass:"",inputGroup:!0,inputGroupClass:"col-sm-3",label:n.DisplayName,lookupField:n.ShowField?c("inflector")(n.ShowField,"variable"):"title",max:n.Max,maxlength:void 0,min:n.Min,minlength:void 0,placeholder:null,required:n.Required||!1,rows:n.NumLines||d.defaultNumberOfRows,validationMessage:"",viewport:d.defaultViewportSize};switch(n.objectType){case"Boolean":p.contentUrl="src/apInputControl.Boolean.html";break;case"Choice":p.contentUrl="src/apInputControl.Choice.html";break;case"DateTime":p.contentUrl="src/apInputControl.Date.html",p.validation=p.validation||m,p.validationMessage="Please enter a valid date.";break;case"HTML":p.contentUrl="src/apInputControl.HTML.html",p.columns=d.defaultTextAreaColumns;break;case"Currency":p.contentUrl="src/apInputControl.Currency.html",p.validationMessage="Only numbers and decimal place accepted.";break;case"Float":case"Integer":case"Number":p.contentUrl="src/apInputControl.Number.html",p.validationMessage="Not a valid number!";break;case"Lookup":o.push(function(){i(q.entity)}),p.contentUrl="src/apInputControl.Lookup.html";break;case"LookupMulti":o.push(function(){i(q.entity)}),p.contentUrl="src/apInputControl.LookupMulti.html";break;case"MultiChoice":p.contentUrl="src/apInputControl.MultiChoice.html";break;case"Note":p.columns=d.defaultTextAreaColumns,p.contentUrl="src/apInputControl.Note.html";break;case"User":o.push(function(){j()}),p.contentUrl="src/apInputControl.Lookup.html";break;case"UserMulti":o.push(function(){j()}),p.contentUrl="src/apInputControl.LookupMulti.html";break;case"Text":p.maxlength=255;default:p.contentUrl="src/apInputControl.Text.html"}var q=a.extend({},p,n,e);if(e.$watch("fieldDefinition",function(b,c){b&&b!==c&&a.extend(q,b)},!0),!a.isString(q.fieldName))throw new Error("Field name is either undefined or not a string.  Ensure you place apostrophe's inside the quotes when identifying data-field-name.");e.options=q,e.validate=l,e.getPrimaryTemplate=f,a.isFunction(q.groupClass)&&e.$watch("entity",function(){g()},!0),!q.entity[q.fieldName]&&q.Default&&(q.entity[q.fieldName]=q.Default),a.each(o,function(a){a()})}}}]),angular.module("angularPoint").directive("apInputRow",["_",function(a){return{scope:{entity:"=",fields:"=",containerClass:"=",ngDisabled:"="},restrict:"A",transclude:!0,templateUrl:"src/apInputRow.html",link:function(b){b.fieldNameArray=a.isArray(b.fields)?b.fields:[b.fields],b.state={containerClass:b.containerClass||"row"}}}}]),angular.module("angularPoint").run(["$templateCache",function(a){"use strict";a.put("src/apInputContainer.html","<div ng-include=getPrimaryTemplate()></div>"),a.put("src/apInputControl.Boolean.html",'<button class="btn btn-link {{ options.inputClass }}" ng-click="options.entity[options.fieldName] = !options.entity[options.fieldName]" ng-disabled=options.disabled><i class="fa fa-2x {{ options.entity[options.fieldName] ? \'fa-check-square-o\' : \'fa-square-o\' }}"></i></button>  <input type=checkbox class=hidden ng-model=options.entity[options.fieldName] ui-validate="\'validate($value)\'">'),a.put("src/apInputControl.Choice.html",'<div ui-select ng-required=options.required ui-validate="\'validate($value)\'" ng-disabled=options.disabled ng-model=options.entity[options.fieldName] class="{{ options.inputClass }}"><div ui-select-match placeholder="{{ options.placeholder }}">{{ $select.selected }}</div><div ui-select-choices data-repeat="choice in options.choices | filter:$select.search">{{ choice }}</div></div>'),a.put("src/apInputControl.Currency.html",'<div class=input-group><span class=input-group-addon><i class="fa fa-dollar"></i></span> <input type=number class="form-control {{ options.inputClass }}" ui-validate="\'validate($value)\'" ng-model=options.entity[options.fieldName] ng-required=options.required ng-disabled=options.disabled ng-minlength="{{ options.minlength }}" ng-maxlength="{{ options.maxlength }}" min={{options.min}} max={{options.max}} placeholder={{options.placeholder}}></div>'),a.put("src/apInputControl.Date.html",'<input ui-date class="form-control {{ options.inputClass }}" ui-validate="\'validate($value)\'" ng-required=options.required ng-disabled=options.disabled placeholder="{{ options.placeholder }}" ng-model=options.entity[options.fieldName]>'),a.put("src/apInputControl.HTML.html",'<div text-angular class="{{ options.inputClass }}" ng-required=options.required ui-validate="\'validate($value)\'" name="{{ options.fieldName }}" ta-disabled=options.disabled placeholder={{options.placeholder}} ng-model=options.entity[options.fieldName]></div>'),a.put("src/apInputControl.Lookup.html",'<div ui-select ng-model=options.entity[options.fieldName] ng-required=options.required ng-disabled=options.disabled class="{{ options.inputClass }}"><div ui-select-match placeholder="{{ options.placeholder }}">{{ $select.selected.lookupValue}}</div><div ui-select-choices data-repeat="lookup in options.lookupArray | filter:{lookupValue: $select.search} track by lookup.lookupId">{{ lookup.lookupValue }}</div></div>'),a.put("src/apInputControl.LookupMulti.html",'<div ui-select multiple ng-model=options.entity[options.fieldName] ui-validate="\'validate($value)\'" ng-required=options.required ng-disabled=options.disabled class="{{ options.inputClass }}"><div ui-select-match placeholder="{{ options.placeholder }}">{{ $item.lookupValue }}</div><div ui-select-choices data-repeat="lookup in options.lookupArray | filter:{lookupValue: $select.search} track by lookup.lookupId">{{ lookup.lookupValue }}</div></div>'),a.put("src/apInputControl.MultiChoice.html",'<div ui-select multiple ng-required=options.required ui-validate="\'validate($value)\'" ng-disabled=options.disabled ng-model=options.entity[options.fieldName] class="{{ options.inputClass }}"><div ui-select-match placeholder="{{ options.placeholder }}">{{ $item }}</div><div ui-select-choices data-repeat="choice in options.choices | filter:$select.search">{{ choice }}</div></div>'),a.put("src/apInputControl.Note.html",'<textarea msd-elastic ng-model=options.entity[options.fieldName] ui-validate="\'validate($value)\'" class="form-control {{ options.inputClass }}" rows={{options.rows}} ng-required=options.required ng-disabled=options.disabled placeholder={{options.placeholder}}>\n</textarea>'),a.put("src/apInputControl.Number.html",'<input type=number class="form-control {{ options.inputClass }}" ui-validate="\'validate($value)\'" ng-model=options.entity[options.fieldName] ng-required=options.required ng-disabled=options.disabled min={{options.min}} max={{options.max}} ng-minlength="{{ options.minlength }}" ng-maxlength="{{ options.maxlength }}" placeholder={{options.placeholder}}>'),a.put("src/apInputControl.Text.html",'<input class="form-control {{ options.inputClass }}" ui-validate="\'validate($value)\'" ng-model=options.entity[options.fieldName] ng-required=options.required ng-disabled=options.disabled ng-minlength="{{ options.minlength }}" ng-maxlength="{{ options.maxlength }}" placeholder={{options.placeholder}}>'),a.put("src/apInputGroup.html","<div class={{options.inputGroupClass}} ng-form=apInput><div class=form-group title={{options.description}} ng-class=\"{'has-error': apInput.$invalid}\"><label class=control-label>{{ options.label }} {{options.required ? '*' : ''}}</label><div ng-include=options.contentUrl></div><span class=help-text ng-if=options.displayDescription>{{ options.description }}</span> <span class=text-danger ng-if=apInput.$invalid>{{ options.validationMessage }}</span></div></div>"),a.put("src/apInputRow.html",'<div class="{{ options.containerClass }}"><div ng-repeat="fieldName in fieldNameArray" ap-input-group data-entity=entity data-field-name=fieldName></div></div>')}]);