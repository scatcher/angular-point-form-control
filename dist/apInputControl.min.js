"use strict";angular.module("angularPoint").directive("apInputGroup",["_","apCacheService",function(a,b){return{scope:{cols:"=?",description:"=?",entity:"=",fieldDefinition:"=?",fieldName:"=",groupClass:"=",label:"=?",ngDisabled:"=",validation:"=?"},restrict:"A",transclude:!0,require:"^form",templateUrl:"src/apInputGroup.html",link:function(c){function d(){var b=r.groupClass||e();r.inputGroupClass=a.isFunction(b)?b():b}function e(){var a=r.cols||p;return"col-sm-"+a}function f(d){var e={};if(r.lookupOptions)e=r.lookupOptions;else{var f=r.List;f&&(e=b.getCachedEntities(f),a.isFunction(r.lookupFilter)&&(e=r.lookupFilter(d,e)))}c.lookupOptions=e}function g(a,b){return a.getFieldDefinition(b)}function h(a){c.entity[r.fieldName]=i(a)}function i(a){var b=parseInt(a,10),d=c.lookupOptions[b];return{lookupId:b,lookupValue:d[r.lookupField]}}function j(){var b=c.entity[r.fieldName];f(c.entity),c.$watch("entity."+r.fieldName,function(){a.isObject(b)&&b.lookupId&&(r.boundSelectValue=b.lookupId)})}function k(b){a.isArray(c.entity[r.fieldName])||(c.entity[r.fieldName]=[]),c.entity[r.fieldName].length=0,a.each(b,function(a){c.entity[r.fieldName].push(i(a))})}function l(){var b=c.entity[r.fieldName];f(c.entity),r.boundSelectValue=[],c.$watch("entity."+r.fieldName,function(){a.each(b,function(a){r.boundSelectValue.push(a.lookupId.toString())})})}function m(b){if(r.validation&&a.isFunction(r.validation)){var d=b||"";return r.validation(d,c.entity,r.fieldName)}return!0}function n(b){return b?a.isDate(b):!0}var o=c.fieldDefinition||g(c.entity,c.fieldName);if(!a.isObject(o))throw new Error("apInputGroup requires a valid field definition object",c);var p=3,q={boundSelectValue:null,columns:p,description:null,disabled:!1,inputGroupClass:"col-sm-3",label:o.DisplayName,lookupField:"title",placeholder:null},r=a.extend({},q,o,c);if(!a.isString(r.fieldName))throw new Error("Field name is either undefined or not a string.  Ensure you place apostrophe's inside the quotes when identifying data-field-name.");switch(c.options=r,c.validate=m,c.updateSingleSelectLookup=h,c.updateMultipleSelectLookup=k,a.isFunction(r.groupClass)&&c.$watch("entity."+r.fieldName,function(){d(),console.log("Scope change detected.")}),!c.entity[r.fieldName]&&r.Default&&(c.entity[r.fieldName]=r.Default),r.objectType){case"Boolean":r.contentUrl="src/apInputControl.Boolean.html";break;case"Choice":r.contentUrl="src/apInputControl.Choice.html";break;case"DateTime":r.contentUrl="src/apInputControl.Date.html",r.validation=r.validation||n;break;case"HTML":r.contentUrl="src/apInputControl.HTML.html",p=12;break;case"Integer":r.contentUrl="src/apInputControl.Number.html";break;case"Number":r.contentUrl="src/apInputControl.Number.html";break;case"Lookup":j(),r.contentUrl="src/apInputControl.Lookup.html";break;case"LookupMulti":l(),r.contentUrl="src/apInputControl.LookupMulti.html";break;case"MultiChoice":r.contentUrl="src/apInputControl.MultiChoice.html",c.entity[r.fieldName]=c.entity[r.fieldName]||[];break;case"Note":r.rows=r.rows||6,p=12,r.contentUrl="src/apInputControl.Note.html";break;default:r.contentUrl="src/apInputControl.Text.html"}return d()}}}]),angular.module("angularPoint").directive("apInputRow",["_",function(a){return{scope:{entity:"=",fields:"=",containerClass:"=",ngDisabled:"="},restrict:"A",transclude:!0,templateUrl:"src/apInputRow.html",link:function(b){b.fieldNameArray=a.isArray(b.fields)?b.fields:[b.fields],b.state={containerClass:b.containerClass||"row"}}}}]),angular.module("angularPoint").run(["$templateCache",function(a){a.put("src/apInputControl.Boolean.html",'<button class="btn btn-link" ng-click="entity[options.fieldName] = !entity[options.fieldName]" ng-disabled=options.disabled ui-validate="\'validate($value)\'"><i class="fa fa-2x {{ entity[options.fieldName] ? \'fa-check-square-o\' : \'fa-square-o\' }}"></i></button>'),a.put("src/apInputControl.Choice.html",'<select class=form-control ng-required=options.required ng-disabled=options.disabled ng-model=entity[options.fieldName] ui-validate="\'validate($value)\'" ng-options="choice for choice in options.Choices"></select>'),a.put("src/apInputControl.Date.html","<input ui-date class=form-control ui-validate=\"'validate($value)'\" ng-required=options.required ng-disabled=options.disabled ng-model=entity[options.fieldName]>"),a.put("src/apInputControl.HTML.html","<div text-angular ng-required=options.required ng-disabled=options.disabled placeholder={{options.placeholder}} ng-model=entity[options.fieldName]></div>"),a.put("src/apInputControl.Lookup.html",'<select ng-model=options.boundSelectValue ng-disabled=ngDisabled ng-change=updateSingleSelectLookup(options.boundSelectValue) ng-options="lookup.id as lookup[options.lookupField] for (lookupId, lookup) in lookupOptions" class=form-control></select>'),a.put("src/apInputControl.LookupMulti.html",'<select ui-select2 multiple ng-model=options.boundSelectValue ng-change=updateMultiModel() ng-disabled=ngDisabled class=form-control><option ng-repeat="lookup in lookupOptions" value="{{ lookup.id }}" ng-bind=lookup[options.lookupField]>&nbsp;</option></select>'),a.put("src/apInputControl.MultiChoice.html",'<select ui-select2 multiple ng-model=entity[options.fieldName] class=form-control><option value=""></option><option ng-repeat="choice in options.Choices" value={{choice}}>{{choice}}</option></select>'),a.put("src/apInputControl.Note.html","<textarea ng-model=entity[options.fieldName] ui-validate=\"'validate($value)'\" class=form-control rows={{options.rows}} ng-required=options.required ng-disabled=options.disabled placeholder={{options.placeholder}}>\n</textarea>"),a.put("src/apInputControl.Number.html",'<input type=number ng-pattern="/^\\d{0,9}(\\.\\d{1,9})?$/" class=form-control ng-model=entity[options.fieldName] ng-required=options.required ng-disabled=options.disabled min={{options.min}} max={{options.max}} placeholder={{options.placeholder}}> <span class=text-danger ng-show=apInput.$error.number>Not valid number!</span>'),a.put("src/apInputControl.Text.html","<input type=\"{{inputType || 'text'}}\" class=form-control ng-model=entity[options.fieldName] ng-required=options.required ng-disabled=options.disabled placeholder={{options.placeholder}}>"),a.put("src/apInputGroup.html","<div class={{options.inputGroupClass}} ng-form=apInput><div class=form-group title={{options.description}} ng-class=\"{'has-error': apInput.$invalid}\"><label class=control-label>{{ options.label }} {{options.required ? '*' : ''}}</label><div ng-include=options.contentUrl ng-disabled=ngDisabled></div></div></div>"),a.put("src/apInputRow.html",'<div class="{{ options.containerClass }}"><div ng-repeat="fieldName in fieldNameArray" ap-input-group data-entity=entity data-field-name=fieldName></div></div>')}]);