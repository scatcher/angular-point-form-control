"use strict";angular.module("angularPoint").directive("apInputGroup",["_","apCacheService",function(a,b){return{scope:{cols:"=?",description:"=?",fieldDefinition:"=?",fieldName:"=",entity:"=",label:"=?",ngDisabled:"=",validation:"=?"},restrict:"A",transclude:!0,templateUrl:"src/apInputGroup.html",link:function(c){function d(){var b=c.cols||m.cols||3;a.isFunction(b)&&col()!==c.columns&&(c.columns=b())}function e(d){var e={},f=m.List;f&&(e=b.getCachedEntities(f),a.isFunction(m.lookupFilter)&&(e=m.lookupFilter(d,e))),c.lookupOptions=e}function f(a,b){return a.getFieldDefinition(b)}function g(a){c.entity[c.fieldName]=h(a)}function h(a){var b=parseInt(a,10),d=c.lookupOptions[b];return{lookupId:b,lookupValue:d[n.lookupField]}}function i(){var b=c.entity[c.fieldName];e(c.entity),c.updateSingleSelectLookup=g,c.$watch("entity."+c.fieldName,function(){a.isObject(b)&&b.lookupId&&(n.placeholderValue=b.lookupId)})}function j(b){a.isArray(c.entity[c.fieldName])||(c.entity[c.fieldName]=[]),c.entity[c.fieldName].length=0,a.each(b,function(a){c.entity[c.fieldName].push(h(a))})}function k(){var b=c.entity[c.fieldName];e(c.entity),n.placeholderValue=[],c.updateMultipleSelectLookup=j,c.$watch("entity."+c.fieldName,function(){a.each(b,function(a){n.placeholderValue.push(a.lookupId.toString())})})}function l(){return!0}if(!a.isString(c.fieldName))throw new Error("Field name is either undefined or not a string.  Ensure you place apostrophe's inside the quotes when identifying data-field-name.");var m=c.fieldDefinition||f(c.entity,c.fieldName),l=m.validation||l,n={description:c.description||m.Description||null,label:c.label||m.label||m.DisplayName,lookupField:"title",placeholderValue:null};switch(c.state=n,c.fieldDefinition=m,c.validation=l,d(),a.isFunction(c.cols)&&c.$watch(function(){d(),console.log("Scope change detected.")}),m.objectType){case"Boolean":c.contentUrl="src/apInputControl.Boolean.html";break;case"Choice":c.contentUrl="src/apInputControl.Choice.html";break;case"DateTime":c.contentUrl="src/apInputControl.Date.html";break;case"HTML":c.contentUrl="src/apInputControl.HTML.html",c.cols=12;break;case"Integer":c.inputType="number";break;case"Lookup":i(),c.contentUrl="src/apInputControl.Lookup.html";break;case"LookupMulti":k(),c.contentUrl="src/apInputControl.LookupMulti.html";break;case"MultiChoice":c.contentUrl="src/apInputControl.MultiChoice.html",c.entity[c.fieldName]=c.entity[c.fieldName]||[];break;case"Note":c.rows=c.rows||m.rows||6,c.cols=12,c.contentUrl="src/apInputControl.Note.html";break;default:c.contentUrl="src/apInputControl.Text.html"}}}}]),angular.module("angularPoint").directive("apInputRow",["_",function(a){return{scope:{entity:"=",fields:"=",containerClass:"=",ngDisabled:"="},restrict:"A",transclude:!0,templateUrl:"src/apInputRow.html",link:function(b){b.fieldNameArray=a.isArray(b.fields)?b.fields:[b.fields],b.state={containerClass:b.containerClass||"row"}}}}]),angular.module("angularPoint").run(["$templateCache",function(a){a.put("src/apInputControl.Boolean.html",'<button class="btn btn-link" ng-click="entity[fieldName] = !entity[fieldName]"><i class="fa fa-2x {{ entity[fieldName] ? \'fa-check-square-o\' : \'fa-square-o\' }}"></i></button>'),a.put("src/apInputControl.Choice.html",'<select class=form-control ng-model=entity[fieldName] ng-options="choice for choice in fieldDefinition.Choices"></select>'),a.put("src/apInputControl.Date.html","<input ui-date class=form-control ng-model=entity[fieldName]>"),a.put("src/apInputControl.HTML.html","<div ng-if=\"fieldDefinition.objectType === 'HTML'\" text-angular ng-model=entity[fieldName]></div>"),a.put("src/apInputControl.Lookup.html",'<select ng-model=state.placeholderValue ng-disabled=ngDisabled ng-change=updateSingleSelectLookup(state.placeholderValue) ng-options="lookup.id as lookup[state.lookupField] for (lookupId, lookup) in lookupOptions" class=form-control></select>'),a.put("src/apInputControl.LookupMulti.html",'<select ui-select2 multiple ng-model=state.placeholderValue ng-change=updateMultiModel() ng-disabled=ngDisabled class=form-control><option ng-repeat="lookup in lookupOptions" value="{{ lookup.id }}" ng-bind=lookup[state.lookupField]>&nbsp;</option></select>'),a.put("src/apInputControl.MultiChoice.html",'<select ui-select2 multiple ng-model=entity[fieldName] class=form-control><option value=""></option><option ng-repeat="choice in fieldDefinition.Choices" value={{choice}}>{{choice}}</option></select>'),a.put("src/apInputControl.Note.html","<textarea ng-model=entity[fieldName] style=width:100% name={{fieldName}} ng-disabled=disabled ui-validate=\"'validation($value)'\" class=form-conrol rows={{rows}}></textarea>"),a.put("src/apInputControl.Text.html","<input type=\"{{inputType || 'text'}}\" class=form-control ng-model=entity[fieldName]>"),a.put("src/apInputGroup.html","<div class=col-md-{{columns}}><div class=form-group title={{state.description}} ng-class=\"{'has-error': $form[fieldName].$invalid}\"><label>{{ state.label }}</label><div ng-include=contentUrl ng-disabled=ngDisabled></div></div></div>"),a.put("src/apInputRow.html",'<div class="{{ state.rowClass }}"><div ng-repeat="fieldName in fieldNameArray" ap-input-group data-entity=entity data-field-name=fieldName></div></div>')}]);