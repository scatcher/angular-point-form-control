"use strict";angular.module("angularPoint").directive("apInputGroup",["_","apCacheService","$filter",function(a,b,c){return{scope:{choices:"=?",cols:"=?",description:"=?",disabled:"=?",displayDescription:"=?",entity:"=?",fieldDefinition:"=?",fieldName:"=?",groupClass:"=?",inputClass:"=?",inputGroup:"=?",label:"=?",lookupField:"=?",max:"=?",maxlength:"=?",min:"=?",minlength:"=?",placeholder:"=?",required:"=?",rows:"=?",validation:"=?",validationMessage:"=?",viewport:"=?"},restrict:"A",transclude:!0,templateUrl:"src/apInputContainer.html",link:function(d){function e(){return q.inputGroup?"src/apInputGroup.html":q.contentUrl}function f(){var b=q.groupClass||g();q.inputGroupClass=a.isFunction(b)?b(q.entity[q.fieldName],q.entity,q.fieldName):b}function g(){var a=q.cols||o;return"col-"+q.viewport+"-"+a}function h(c){if(!q.lookupOptions){var d=q.List;d&&(q.lookupOptions=b.getCachedEntities(d),a.isFunction(q.lookupFilter)&&(q.lookupOptions=q.lookupFilter(c,lookupOptions)))}i()}function i(){q.lookupArray=[],a.each(q.lookupOptions,function(a){q.lookupArray.push({lookupValue:a[q.lookupField],lookupId:a.id})})}function j(a,b){if(!a||!b)throw new Error("An entity and fieldName are both required on the directive ifa fieldDefinition isn't specified.");return a.getFieldDefinition(b)}function k(b){if(q.validation&&a.isFunction(q.validation)){var c=b||"";return q.validation(c,q)}return!0}function l(b){return b?a.isDate(b):!0}var m=d.fieldDefinition||j(d.entity,d.fieldName);if(!a.isObject(m))throw new Error("apInputGroup requires a valid field definition object",d);var n=[f],o=3,p={choices:m.Choices,columns:o,contentUrl:"",description:m.Description,displayDescription:!1,disabled:!1,inputClass:"",inputGroup:!0,inputGroupClass:"col-sm-3",label:m.DisplayName,lookupField:m.ShowField?c("inflector")(m.ShowField,"variable"):"title",max:m.Max,maxlength:void 0,min:m.Min,minlength:void 0,placeholder:null,required:m.Required||!1,rows:m.NumLines||6,validationMessage:"",viewport:"sm"};switch(m.objectType){case"Boolean":p.contentUrl="src/apInputControl.Boolean.html";break;case"Choice":p.contentUrl="src/apInputControl.Choice.html";break;case"DateTime":p.contentUrl="src/apInputControl.Date.html",p.validation=p.validation||l,p.validationMessage="Please enter a valid date.";break;case"HTML":p.contentUrl="src/apInputControl.HTML.html",o=12;break;case"Currency":p.contentUrl="src/apInputControl.Currency.html",p.validationMessage="Only numbers and decimal place accepted.";break;case"Float":case"Integer":case"Number":p.contentUrl="src/apInputControl.Number.html",p.validationMessage="Not a valid number!";break;case"Lookup":n.push(function(){h(q.entity)}),p.contentUrl="src/apInputControl.Lookup.html";break;case"LookupMulti":n.push(function(){h(q.entity)}),p.contentUrl="src/apInputControl.LookupMulti.html";break;case"MultiChoice":p.contentUrl="src/apInputControl.MultiChoice.html";break;case"Note":o=12,p.contentUrl="src/apInputControl.Note.html";break;case"User":n.push(function(){i()}),p.contentUrl="src/apInputControl.Lookup.html";break;case"UserMulti":n.push(function(){i()}),p.contentUrl="src/apInputControl.LookupMulti.html";break;case"Text":p.maxlength=255;default:p.contentUrl="src/apInputControl.Text.html"}var q=a.extend({},p,m,d);if(d.$watch("fieldDefinition",function(b,c){b&&b!==c&&a.extend(q,b)},!0),!a.isString(q.fieldName))throw new Error("Field name is either undefined or not a string.  Ensure you place apostrophe's inside the quotes when identifying data-field-name.");d.options=q,d.validate=k,d.getPrimaryTemplate=e,a.isFunction(q.groupClass)&&d.$watch("entity",function(){f()},!0),!q.entity[q.fieldName]&&q.Default&&(q.entity[q.fieldName]=q.Default),a.each(n,function(a){a()})}}}]),angular.module("angularPoint").directive("apInputRow",["_",function(a){return{scope:{entity:"=",fields:"=",containerClass:"=",ngDisabled:"="},restrict:"A",transclude:!0,templateUrl:"src/apInputRow.html",link:function(b){b.fieldNameArray=a.isArray(b.fields)?b.fields:[b.fields],b.state={containerClass:b.containerClass||"row"}}}}]),angular.module("angularPoint").run(["$templateCache",function(a){a.put("src/apInputContainer.html","<div ng-include=getPrimaryTemplate()></div>"),a.put("src/apInputControl.Boolean.html",'<button class="btn btn-link {{ options.inputClass }}" ng-click="options.entity[options.fieldName] = !options.entity[options.fieldName]" ng-disabled=options.disabled><i class="fa fa-2x {{ options.entity[options.fieldName] ? \'fa-check-square-o\' : \'fa-square-o\' }}"></i></button>  <input type=checkbox class=hidden ng-model=options.entity[options.fieldName] ui-validate="\'validate($value)\'">'),a.put("src/apInputControl.Choice.html",'<select class="form-control {{ options.inputClass }}" ng-required=options.required ui-validate="\'validate($value)\'" placeholder="{{ options.placeholder }}" ng-disabled=options.disabled ng-model=options.entity[options.fieldName] ui-validate="\'validate($value)\'" ng-options="choice for choice in options.choices"></select>'),a.put("src/apInputControl.Currency.html",'<div class=input-group><span class=input-group-addon><i class="fa fa-dollar"></i></span> <input type=number class="form-control {{ options.inputClass }}" ui-validate="\'validate($value)\'" ng-model=options.entity[options.fieldName] ng-required=options.required ng-disabled=options.disabled ng-minlength="{{ options.minlength }}" ng-maxlength="{{ options.maxlength }}" min={{options.min}} max={{options.max}} placeholder={{options.placeholder}}></div>'),a.put("src/apInputControl.Date.html",'<input ui-date class="form-control {{ options.inputClass }}" ui-validate="\'validate($value)\'" ng-required=options.required ng-disabled=options.disabled placeholder="{{ options.placeholder }}" ng-model=options.entity[options.fieldName]>'),a.put("src/apInputControl.HTML.html",'<div text-angular class="{{ options.inputClass }}" ng-required=options.required ui-validate="\'validate($value)\'" name="{{ options.fieldName }}" ta-disabled=options.disabled placeholder={{options.placeholder}} ng-model=options.entity[options.fieldName]></div>'),a.put("src/apInputControl.Lookup.html",'<div ui-select ng-model=options.entity[options.fieldName] ng-required=options.required ng-disabled=options.disabled class="{{ options.inputClass }}"><div ui-select-match placeholder="{{ options.placeholder }}">{{ $select.selected.lookupValue}}</div><div ui-select-choices data-repeat="lookup in options.lookupArray track by lookup.lookupId ">{{ lookup.lookupValue }}</div></div>'),a.put("src/apInputControl.LookupMulti.html",'<div ui-select multiple ng-model=options.entity[options.fieldName] ui-validate="\'validate($value)\'" ng-required=options.required ng-disabled=options.disabled class="form-control {{ options.inputClass }}"><div ui-select-match placeholder="{{ options.placeholder }}">{{ $item.lookupValue }}</div><div ui-select-choices data-repeat="lookup in options.lookupArray">{{ lookup.lookupValue }}</div></div>'),a.put("src/apInputControl.MultiChoice.html",'<div ui-select multiple ng-required=options.required ui-validate="\'validate($value)\'" ng-disabled=options.disabled ng-model=options.entity[options.fieldName] class="form-control {{ options.inputClass }}"><div ui-select-match placeholder="{{ options.placeholder }}">{{ $item }}</div><div ui-select-choices data-repeat="choice in options.choices">{{ choice }}</div></div>'),a.put("src/apInputControl.Note.html",'<textarea ng-model=options.entity[options.fieldName] ui-validate="\'validate($value)\'" class="form-control {{ options.inputClass }}" rows={{options.rows}} ng-required=options.required ng-disabled=options.disabled placeholder={{options.placeholder}}>\n</textarea>'),a.put("src/apInputControl.Number.html",'<input type=number class="form-control {{ options.inputClass }}" ui-validate="\'validate($value)\'" ng-model=options.entity[options.fieldName] ng-required=options.required ng-disabled=options.disabled min={{options.min}} max={{options.max}} ng-minlength="{{ options.minlength }}" ng-maxlength="{{ options.maxlength }}" placeholder={{options.placeholder}}>'),a.put("src/apInputControl.Text.html",'<input class="form-control {{ options.inputClass }}" ui-validate="\'validate($value)\'" ng-model=options.entity[options.fieldName] ng-required=options.required ng-disabled=options.disabled ng-minlength="{{ options.minlength }}" ng-maxlength="{{ options.maxlength }}" placeholder={{options.placeholder}}>'),a.put("src/apInputGroup.html","<div class={{options.inputGroupClass}} ng-form=apInput><div class=form-group title={{options.description}} ng-class=\"{'has-error': apInput.$invalid}\"><label class=control-label>{{ options.label }} {{options.required ? '*' : ''}}</label><div ng-include=options.contentUrl ng-disabled=ngDisabled></div><span class=help-text ng-if=options.displayDescription>{{ options.description }}</span> <span class=text-danger ng-if=apInput.$invalid>{{ options.validationMessage }}</span></div></div>"),a.put("src/apInputRow.html",'<div class="{{ options.containerClass }}"><div ng-repeat="fieldName in fieldNameArray" ap-input-group data-entity=entity data-field-name=fieldName></div></div>')}]);